[{"title":"Docker Installation and Usage","url":"/2020/04/07/docker/","content":"Docker 安装手动卸载旧版本sudo apt-get remove docker docker-engine docker.io containerd runc\n\n一键安装curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n\n手动安装sudo apt-get updatesudo apt-get install \\    apt-transport-https \\    ca-certificates \\    curl \\    gnupg-agent \\    software-properties-commoncurl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -sudo apt-key fingerprint 0EBFCD88sudo add-apt-repository \\   &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/ \\  $(lsb_release -cs) \\  stable&quot;sudo apt-get updatesudo apt-get install docker-ce docker-ce-cli containerd.iosudo apt-get install docker-ce\n\n测试安装成功sudo docker run hello-world\n如果没有成功就再试一次，可能第一次不成功\n更换源创建或修改 /etc/docker/daemon.json 文件vi /etc/docker/daemon.json\n\n在上述文件写入&#123;\t&quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]&#125;\n\n\n主义不要有多余空格，缩进用Tab\n以上时中国docker官方镜像，也可以试试别的源\n网易http://hub-mirror.c.163.com\nustchttps://docker.mirrors.ustc.edu.cn\n中国科技大学https://docker.mirrors.ustc.edu.cn\n\n\n\n刷新systemctl daemon-reloadsystemctl restart docker.service\n\n\n\nDocker使用镜像列表docker images\n\n获取镜像docker pull ubuntu\n\n启动容器docker run -it ubuntu /bin/bash\n\n\n-i: 交互式操作。\n-t: 终端。\n\n容器列表docker ps -a\n\n按Id启动容器docker start b750bbbcfd88\n\n进入容器docker exec 1e560fca3906\n\n\n也可以使用attach但是退出会使容器停止\n\n删除容器docker rm -f 1e560fca3906\n\n参考https://www.runoob.com/docker/docker-container-usage.html\n","categories":["Hexo"],"tags":["docker","github","notes"]},{"title":"CityFlow Document","url":"/2020/08/23/cityflow/","content":"CityFlowquick start安装 https://cityflow.readthedocs.io/en/latest/install.html\n输入说明需要三个文件作为输入 roadnet.json config.json flow.json\nroadnet.json具体格式：https://cityflow.readthedocs.io/en/latest/roadnet.html\n如果要实际地图，生成方法见之前的地图转换\n\n网站https://export.hotosm.org/en/v3/exports原先的不太好用，直接用这个网站export，注册个账号然后按export tool选择.pbf格式只选择transportation，一路next等它complete，点文件直接下载\n打开osmconvert.exe 在群文件里按a往后一步步做，将pbf转换为osm文件\n去SUMO/bin下面点开start-command-line.batcd到之前osm所在文件夹 输入 netconvert –osm-files map.osm -o map.net.xml\nnet.xml转cityflow文件去tools/converter文件夹下python converter.py –sumonet map.net.xml –cityflownet map.json\n\n如果要网格地图可以用tools/generator中的generate_grid_scenario.py\n比如生成10*10的网格地图\npython generate_grid_scenario.py 10 10\n\n他还会顺便生成一个很规整的flow文件，估计colight中很大一部分是用它跑的\nflow.jsongit clone https://github.com.cnpmjs.org/macro-city-flow/dev-city-flow.gitcd dev-city-flow/tools/geneatorpython didi2flow.py --inFile gps_small --dir . --roadnetXML Chengdu.net.xml\n\n参数说明\n\n–inFile od点对 包括司机编号 订单编号 时间戳 经纬度\n\n比如一个司机的某个订单 但其实只要od就行\n\n```8f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969147,104.07513,30.727248f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969150,104.07513,30.727028f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969154,104.07504,30.726728f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969156,104.07497,30.726308f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969159,104.07497,30.725828f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969162,104.07496,30.725448f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969168,104.07489,30.724878f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969171,104.07476,30.724568f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969174,104.07457,30.724348f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969177,104.07434,30.724068f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969180,104.07422,30.723798f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969183,104.07424,30.723518f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969186,104.07449,30.723158f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969189,104.07481,30.723008f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969193,104.07506,30.722988f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969195,104.07539,30.723018f20c9188561b796ef8e26196de30be4,39a096b71376b82f35732eff6d95779b,1477969198,104.07576,30.72308\n  - 参照gps_small- --dir 运行文件夹 一般就打 .- --roadnetXML sumo的地图获得方法按上面的地图转换方法做到第三部关于flow文件说明https://cityflow.readthedocs.io/en/latest/flow.html所以didi2flow脚本里面的starttime和endtime其实是不对的 应该是许多starttime和endtime相同的flow 这里需要改动反正时间戳有问题自己处理一下### config.json参照此连接中的sample config file https://cityflow.readthedocs.io/en/latest/start.html```json&#123;\t&quot;interval&quot;: 1.0,\t&quot;seed&quot;: 0,\t&quot;dir&quot;: &quot;examples/&quot;,\t&quot;roadnetFile&quot;: &quot;roadnet.json&quot;, \t&quot;flowFile&quot;: &quot;flow.json&quot;, \t&quot;rlTrafficLight&quot;: false,\t&quot;laneChange&quot;: false,\t&quot;saveReplay&quot;: true,\t&quot;roadnetLogFile&quot;: &quot;replay_roadnet.json&quot;, \t&quot;replayLogFile&quot;: &quot;replay.txt&quot;&#125;\n\n\n\n说几个重要的\ninterval以秒为单位 一个step跑一个interval\ndir是py文件运行文件夹与roadnet和flow文件所在文件夹的相对路径 如果搞不来就写绝对路径\nroadnetfile和flowfile是上面两个文件的名字\nrltrafficlight在跑colight时一定要开着\nsavereplay就是要不要存replay 一般true 跑colight这种模型时可以false\n最后两个logfile就是存savereplay的文件名字 两个文件一个存路网一个存车流回放\n使用说明一般准备一个文件夹存放以上三个文件，再在外层运行py文件\n比如\n\n6_6中存放上述三个文件\n6_6.py\nimport cityflowfrom tqdm import tqdmeng = cityflow.Engine(&quot;./6_6/config.json&quot;,10) # 可以自由控制后面这个线程数for i in tqdm(range(3600)): # 跑几步就运行几次next_step    eng.next_step()\n\n\n\n可视化说明如果config.json中savereplay开着，以上跑完可以生成两个replay文件roadnetLogFile和replayLogFile\n打开frontend中的index.html，roadnet file中放入roadnetlogfile，replay file中放入replaylogfile，点start\n","categories":["opensource"],"tags":["github","cityflow","document"]},{"title":"算法效率度量","url":"/2020/09/16/%E7%AE%97%E6%B3%95%E6%95%88%E7%8E%87%E5%BA%A6%E9%87%8F/","content":"算法效率度量方法\n\n测量方法\n事后统计方法\n需要先编制好程序\n\n\n事前估算方法\n策略方案\n编译产生代码质量\n问题的输入规模\n机器执行指令的速度\n\n\n\n\n\n\n\n分析算法运行时间\n不计循环索引的递增和循环终止条件等操作\n把基本操作和输入模式联系起来\n关注次数最高的项\n\n\n\n\n\n时间复杂度\n定义大O计法\n问题规模记为$n$\n语句被执行的次数$T(n)$，即执行时间\n算法执行时间的增长率和$f(n)$的增长率相同表示为：$T(n) = O(f(n))$\n$O()$被称为大O计法\n\n\n推导大O阶\n用常数1取代运行时间中的所有加法常数\n修改后的运行次数函数中，只保留最高阶\n如果最高阶项存在且不为1，则去除与这个项相乘的常数\n\n\n\n\n\n\n\n\n\n术语\n时间复杂度\n例子\n\n\n\n常数阶\n$O(1)$\n$2020$\n\n\n线性阶\n$O(n)$\n$3n+4$\n\n\n平方阶\n$O(n^k)$\n$3n^2+4n+5$\n\n\n对数阶\n$O(log(n))$\n$3log(2)n+4$\n\n\nnlogn阶\n$O(nlogn)$\n$2n+3nlog(2)n+14$\n\n\n指数阶\n$O(2^n)$\n$2^n$\n\n\n\n举例\n$O(log(n))$int i = 1, n = 100;while( i &lt; n )&#123;    i = i * 2;&#125;\n\n\n\n\n\n时间复杂度消耗时间从小到大依次为:$O(1)&lt;O(logn)&lt;(n)&lt;O(nlogn)&lt;O(n^2)&lt;O(n^3)&lt;O(2^n)&lt;O(n!)&lt;O(n^n)$\n\n$O(n^3)$之后基本不用考虑\n\n\n\n\n算法空间复杂度\n算法运行所用空间\n\n\n\n","categories":["Hexo"],"tags":["notes","Data structure and algorithm"]}]