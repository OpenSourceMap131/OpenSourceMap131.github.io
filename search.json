[{"title":"Docker Installation and Usage","url":"/2020/04/07/trytheme/","content":"Docker 安装手动卸载旧版本sudo apt-get remove docker docker-engine docker.io containerd runc\n\n一键安装curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n\n手动安装sudo apt-get updatesudo apt-get install \\    apt-transport-https \\    ca-certificates \\    curl \\    gnupg-agent \\    software-properties-commoncurl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -sudo apt-key fingerprint 0EBFCD88sudo add-apt-repository \\   &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/ \\  $(lsb_release -cs) \\  stable&quot;sudo apt-get updatesudo apt-get install docker-ce docker-ce-cli containerd.iosudo apt-get install docker-ce\n\n测试安装成功sudo docker run hello-world\n如果没有成功就再试一次，可能第一次不成功\n更换源创建或修改 /etc/docker/daemon.json 文件vi /etc/docker/daemon.json\n\n在上述文件写入&#123;\t&quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]&#125;\n\n\n主义不要有多余空格，缩进用Tab\n以上时中国docker官方镜像，也可以试试别的源\n网易http://hub-mirror.c.163.com\nustchttps://docker.mirrors.ustc.edu.cn\n中国科技大学https://docker.mirrors.ustc.edu.cn\n\n\n\n刷新systemctl daemon-reloadsystemctl restart docker.service\n\n\n\nDocker使用镜像列表docker images\n\n获取镜像docker pull ubuntu\n\n启动容器docker run -it ubuntu /bin/bash\n\n\n-i: 交互式操作。\n-t: 终端。\n\n容器列表docker ps -a\n\n按Id启动容器docker start b750bbbcfd88\n\n进入容器docker exec 1e560fca3906\n\n\n也可以使用attach但是退出会使容器停止\n\n删除容器docker rm -f 1e560fca3906\n\n参考https://www.runoob.com/docker/docker-container-usage.html\n","categories":["Hexo"],"tags":["docker","github","notes"]},{"title":"算法效率度量","url":"/2020/09/16/trytheme1/","content":"算法效率度量方法\n\n测量方法\n事后统计方法\n需要先编制好程序\n\n\n事前估算方法\n策略方案\n编译产生代码质量\n问题的输入规模\n机器执行指令的速度\n\n\n\n\n\n\n\n分析算法运行时间\n不计循环索引的递增和循环终止条件等操作\n把基本操作和输入模式联系起来\n关注次数最高的项\n\n\n\n\n\n时间复杂度\n定义大O计法\n问题规模记为$n$\n语句被执行的次数$T(n)$，即执行时间\n算法执行时间的增长率和$f(n)$的增长率相同表示为：$T(n) = O(f(n))$\n$O()$被称为大O计法\n\n\n推导大O阶\n用常数1取代运行时间中的所有加法常数\n修改后的运行次数函数中，只保留最高阶\n如果最高阶项存在且不为1，则去除与这个项相乘的常数\n\n\n\n\n\n\n\n\n\n术语\n时间复杂度\n例子\n\n\n\n常数阶\n$O(1)$\n$2020$\n\n\n线性阶\n$O(n)$\n$3n+4$\n\n\n平方阶\n$O(n^k)$\n$3n^2+4n+5$\n\n\n对数阶\n$O(log(n))$\n$3log(2)n+4$\n\n\nnlogn阶\n$O(nlogn)$\n$2n+3nlog(2)n+14$\n\n\n指数阶\n$O(2^n)$\n$2^n$\n\n\n\n举例\n$O(log(n))$int i = 1, n = 100;while( i &lt; n )&#123;    i = i * 2;&#125;\n\n\n\n\n\n时间复杂度消耗时间从小到大依次为:$O(1)&lt;O(logn)&lt;(n)&lt;O(nlogn)&lt;O(n^2)&lt;O(n^3)&lt;O(2^n)&lt;O(n!)&lt;O(n^n)$\n\n$O(n^3)$之后基本不用考虑\n\n\n\n\n算法空间复杂度\n算法运行所用空间\n\n\n\n","categories":["Hexo"],"tags":["notes","Data structure and algorithm"]}]